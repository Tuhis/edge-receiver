name: release

on:
  push:
    branches:
      - main

jobs:
  semanticrelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  goreleaser:
    needs: semanticrelease
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  helmrelease:
    needs: semanticrelease
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10
          fetch-tags: true

      - name: Get latest tag
        id: latesttag
        run: echo "::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)"

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lower case version of username
        id: repolc
        run: echo "USER_LC=$(echo ${REPO} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        env:
          REPO: '${{ github.repository_owner }}'

      - name: Package and publish Helm chart
        run: |
            helm package deploy/edge-receiver --version ${{ steps.latesttag.outputs.tag }}
            helm push edge-receiver-${{ steps.latesttag.outputs.tag }}.tgz oci://ghcr.io/${{ steps.repolc.outputs.USER_LC }}/charts
